{"version":3,"file":"3c791dbfac6a1d5f66b227d9e7c8f620e86bc8c4-eecbcb52319b94055a90.js","mappings":"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","sources":["webpack://gatsby-starter-contentful-homepage-ts/./src/components/ui.css.ts","webpack://gatsby-starter-contentful-homepage-ts/./node_modules/camelcase/index.js","webpack://gatsby-starter-contentful-homepage-ts/../src/image-utils.ts","webpack://gatsby-starter-contentful-homepage-ts/../src/components/hooks.ts","webpack://gatsby-starter-contentful-homepage-ts/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-contentful-homepage-ts/../src/components/picture.tsx","webpack://gatsby-starter-contentful-homepage-ts/../src/components/placeholder.tsx","webpack://gatsby-starter-contentful-homepage-ts/../src/components/main-image.tsx","webpack://gatsby-starter-contentful-homepage-ts/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-contentful-homepage-ts/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-contentful-homepage-ts/../src/components/static-image.server.tsx","webpack://gatsby-starter-contentful-homepage-ts/../src/components/static-image.tsx","webpack://gatsby-starter-contentful-homepage-ts/./node_modules/is-absolute-url/index.js","webpack://gatsby-starter-contentful-homepage-ts/./src/components/ui.tsx"],"sourcesContent":["import \"src/theme.css.ts.vanilla.css!=!../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/theme.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE42TT1ODMBDF7/0UO+21dJIQ/qUnZ7S3nvwEQKFWC9RSter43X3BGYddPNgL5Zf3NmH3xZ277kKfM6IgKLM23ufK0aKud5FS6xHVoEpFRVGMqfmThr5CVJa8gh201qTJmEYDZcLYUcBA4siermOSOko5yRzpmKPcUWg4KhzFolQJoxHFdjiBkFVAQlUDyT33YHLTBzC568F75baP/igcPQEJ63H6pQ2QqNU6MsLYTftxQmeF8XnaojNUfES9I5GPC2ycvDhKOHnF1Dh5czS/3dJ93vbzJfV4BH11PtRjzfUfmndHkGy7tlvStmqPeDR46U95WY11H2jUKo5YsJVnhjPtmWYIUecAKec3xPrcrpSpGoaRcNBU0HiIneKN1ki6VnJuOvUhsFKLxKdyeDqfDlQj9KGS7nKYqYC7aUJ05d2C1f6Ygu2ngdNIfuZ/AiP8cPs77W/x8H9h7kwWhupm+bvkq43XtP1ZS9maTcKN3ZhsPfv6Bi6fQ3TLBAAA\\\"}!../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/ui.css.ts.vanilla.css!=!../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/ui.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#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\\\"}!../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var avatar = 'reey135h';\nexport var backgrounds = {primary:'reey135e',muted:'reey135f'};\nexport var blockLink = 'reey1358';\nexport var blockquote = 'reey135g';\nexport var box = {center:'reey132o'};\nexport var buttons = {primary:'reey135a reey1359',reversed:'reey135b reey1359',link:'reey135c reey1359',linkReversed:'reey135d reey1359'};\nexport var container = 'reey130';\nexport var containers = {normal:'reey130',wide:'reey132 reey130',narrow:'reey133 reey130',tight:'reey134 reey130',fullbleed:'reey135 reey130'};\nexport var ctaLink = 'reey1357';\nexport var debug = 'reey135q';\nexport var flex = 'reey136';\nexport var flexGap = {'0':'reey13h','1':'reey13i','2':'reey13j','3':'reey13k','4':'reey13l','5':'reey13m','6':'reey13n','-1':'reey13o','-2':'reey13p','-3':'reey13q','-4':'reey13r','-5':'reey13s','-6':'reey13t'};\nexport var flexVariants = {wrap:'reey137',start:'reey138',baseline:'reey139',columnStart:'reey13a',column:'reey13b',end:'reey13c',stretch:'reey13d',spaceBetween:'reey13e',center:'reey13f',responsive:'reey13g'};\nexport var gutter = {'0':'reey1324','1':'reey1325','2':'reey1326','3':'reey1327','4':'reey1328','5':'reey1329','6':'reey132a','-1':'reey132b','-2':'reey132c','-3':'reey132d','-4':'reey132e','-5':'reey132f','-6':'reey132g'};\nexport var iconLink = 'reey135n';\nexport var icons = {small:'reey135k',medium:'reey135l',large:'reey135m'};\nexport var interactiveIcon = 'reey135o';\nexport var link = 'reey1354';\nexport var list = 'reey1310';\nexport var logos = {small:'reey135i',medium:'reey135j'};\nexport var margin = {'0':'reey132q','1':'reey132r','2':'reey132s','3':'reey132t','4':'reey132u','5':'reey132v','6':'reey132w','-1':'reey132x','-2':'reey132y','-3':'reey132z','-4':'reey1330','-5':'reey1331','-6':'reey1332',auto:'reey1333'};\nexport var margin0 = 'reey134o';\nexport var marginBottom = {'0':'reey134a','1':'reey134b','2':'reey134c','3':'reey134d','4':'reey134e','5':'reey134f','6':'reey134g','-1':'reey134h','-2':'reey134i','-3':'reey134j','-4':'reey134k','-5':'reey134l','-6':'reey134m',auto:'reey134n'};\nexport var marginLeft = {'0':'reey1334','1':'reey1335','2':'reey1336','3':'reey1337','4':'reey1338','5':'reey1339','6':'reey133a','-1':'reey133b','-2':'reey133c','-3':'reey133d','-4':'reey133e','-5':'reey133f','-6':'reey133g',auto:'reey133h'};\nexport var marginRight = {'0':'reey133i','1':'reey133j','2':'reey133k','3':'reey133l','4':'reey133m','5':'reey133n','6':'reey133o','-1':'reey133p','-2':'reey133q','-3':'reey133r','-4':'reey133s','-5':'reey133t','-6':'reey133u',auto:'reey133v'};\nexport var marginTop = {'0':'reey133w','1':'reey133x','2':'reey133y','3':'reey133z','4':'reey1340','5':'reey1341','6':'reey1342','-1':'reey1343','-2':'reey1344','-3':'reey1345','-4':'reey1346','-5':'reey1347','-6':'reey1348',auto:'reey1349'};\nexport var marginY = {'0':'reey131r','1':'reey131s','2':'reey131t','3':'reey131u','4':'reey131v','5':'reey131w','6':'reey131x','-1':'reey131y','-2':'reey131z','-3':'reey1320','-4':'reey1321','-5':'reey1322','-6':'reey1323'};\nexport var media = {small:'screen and (min-width: 40em)',medium:'screen and (min-width: 52em)',large:'screen and (min-width: 64em)'};\nexport var navButtonlink = 'reey1356';\nexport var navlink = 'reey1355';\nexport var order = {'0':'reey132k','1':'reey132l','2':'reey132m','3':'reey132n'};\nexport var padding = {'0':'reey1311','1':'reey1312','2':'reey1313','3':'reey1314','4':'reey1315','5':'reey1316','6':'reey1317','-1':'reey1318','-2':'reey1319','-3':'reey131a','-4':'reey131b','-5':'reey131c','-6':'reey131d'};\nexport var paddingY = {'0':'reey131e','1':'reey131f','2':'reey131g','3':'reey131h','4':'reey131i','5':'reey131j','6':'reey131k','-1':'reey131l','-2':'reey131m','-3':'reey131n','-4':'reey131o','-5':'reey131p','-6':'reey131q'};\nexport var radii = {button:'reey132h',large:'reey132i',circle:'reey132j'};\nexport var section = 'reey132p';\nexport var text = {body:'reey134p reey134o',lead:'reey134q reey134o',superHeading:'reey134r reey134o',heading:'reey134s reey134o',subhead:'reey134t reey134o',subheadSmall:'reey134u reey134o',kicker:'reey134v reey134o',caps:'reey134w reey134o',stat:'reey134x reey134o',statLabel:'reey134y reey134o',small:'reey134z reey134o',medium:'reey1350 reey134o',mega:'reey1351 reey134o',center:'reey1352',bold:'reey1353'};\nexport var visuallyHidden = 'reey135p';\nexport var widths = {full:'reey13u',half:'reey13v',quarter:'reey13w',third:'reey13x',twothirds:'reey13y',fitContent:'reey13z'};","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\n// Windows paths like `c:\\`\nconst WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\\\/;\n\nexport default function isAbsoluteUrl(url) {\n\tif (typeof url !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof url}\\``);\n\t}\n\n\tif (WINDOWS_PATH_REGEX.test(url)) {\n\t\treturn false;\n\t}\n\n\treturn ABSOLUTE_URL_REGEX.test(url);\n}\n","import { Link as GatsbyLink } from \"gatsby\"\nimport {\n  GatsbyImage,\n  GatsbyImageProps,\n  getImage,\n  IGatsbyImageData,\n  ImageDataLike,\n} from \"gatsby-plugin-image\"\nimport isAbsoluteURL from \"is-absolute-url\"\nimport * as React from \"react\"\nimport * as styles from \"./ui.css\"\nimport { Radii, SpaceTokens } from \"../theme.css\"\n\nexport const cx = (...args: (string | undefined)[]) =>\n  args.filter(Boolean).join(\" \")\n\nexport interface HomepageLink {\n  id: string\n  href: string\n  url: string\n  text: string\n}\n\nexport interface HomepageImage {\n  id: string\n  alt: string\n  gatsbyImageData: IGatsbyImageData\n  url: string\n}\n\ntype WithChildren<T = {}> = T & { children?: React.ReactNode }\ninterface BaseProps {\n  as?: React.ElementType | React.FC\n  cx?: string[]\n  className?: string\n}\n\nexport function Base({\n  as: Component = \"div\",\n  cx: _cx = [],\n  className,\n  ...props\n}: BaseProps) {\n  return <Component className={cx(..._cx, className)} {...props} />\n}\n\ninterface ContainerProps extends BaseProps {\n  width?: styles.Containers\n}\n\nexport function Container({\n  width = \"normal\",\n  ...props\n}: WithChildren<ContainerProps>) {\n  return <Base cx={[styles.containers[width]]} {...props} />\n}\n\ninterface FlexProps extends BaseProps {\n  variant?: styles.FlexVariants\n  gap?: SpaceTokens\n  gutter?: SpaceTokens\n  wrap?: boolean\n  responsive?: boolean\n  marginY?: SpaceTokens\n  alignItems?: styles.FlexVariants\n}\n\nexport function Flex({\n  variant,\n  gap = 3,\n  gutter,\n  wrap,\n  responsive,\n  marginY,\n  alignItems,\n  cx: _cx = [],\n  ...props\n}: WithChildren<FlexProps>) {\n  return (\n    <Base\n      cx={[\n        styles.flex,\n        variant && styles.flexVariants[variant],\n        responsive && styles.flexVariants.responsive,\n        wrap && styles.flexVariants.wrap,\n        gutter && styles.gutter[gutter],\n        gutter ? styles.flexGap[0] : styles.flexGap[gap],\n        marginY && styles.marginY[marginY],\n        alignItems && styles.flexVariants[alignItems],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\ninterface BoxProps extends BaseProps {\n  width?: styles.Widths\n  background?: styles.Backgrounds\n  padding?: SpaceTokens\n  paddingY?: SpaceTokens\n  radius?: Radii\n  center?: boolean\n  order?: 0 | 1 | 2 | 3\n}\n\nexport function Box({\n  width = \"full\",\n  background,\n  padding,\n  paddingY,\n  radius,\n  center = false,\n  order,\n  cx: _cx = [],\n  ...props\n}: WithChildren<BoxProps>) {\n  return (\n    <Base\n      cx={[\n        styles.widths[width],\n        background && styles.backgrounds[background],\n        padding && styles.padding[padding],\n        paddingY && styles.paddingY[paddingY],\n        radius && styles.radii[radius],\n        center && styles.box.center,\n        order && styles.order[order],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\ninterface FlexListProps extends FlexProps {}\n\nexport function FlexList(props: WithChildren<FlexListProps>) {\n  return <Flex as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function List(props) {\n  return <Base as=\"ul\" cx={[styles.list]} {...props} />\n}\n\ninterface SpaceProps extends BaseProps {\n  size?: SpaceTokens | \"auto\"\n}\n\nexport function Space({ size = \"auto\", ...props }: SpaceProps) {\n  return <Base cx={[styles.margin[size]]} {...props} />\n}\n\ninterface NudgeProps {\n  left?: number\n  right?: number\n  top?: number\n  bottom?: number\n}\n\nexport function Nudge({\n  left,\n  right,\n  top,\n  bottom,\n  ...props\n}: WithChildren<NudgeProps>) {\n  return (\n    <Base\n      cx={[\n        left && styles.marginLeft[-left],\n        right && styles.marginRight[-right],\n        top && styles.marginTop[-top],\n        bottom && styles.marginBottom[-bottom],\n      ]}\n      {...props}\n    />\n  )\n}\n\ninterface SectionProps extends BoxProps {}\n\nexport function Section(props: WithChildren<SectionProps>) {\n  return <Box as=\"section\" className={styles.section} {...props} />\n}\n\ninterface TextProps extends BaseProps {\n  variant?: styles.TextVariants\n  center?: boolean\n  bold?: boolean\n}\n\nexport function Text({\n  variant = \"body\",\n  center = false,\n  bold = false,\n  ...props\n}: WithChildren<TextProps>) {\n  return (\n    <Base\n      cx={[\n        styles.text[variant],\n        center && styles.text.center,\n        bold && styles.text.bold,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function SuperHeading({ ...props }) {\n  return <Text as=\"h1\" variant=\"superHeading\" {...props} />\n}\n\nexport function Heading({ ...props }) {\n  return <Text as=\"h2\" variant=\"heading\" {...props} />\n}\n\nexport function Subhead({ ...props }) {\n  return <Text as=\"h3\" variant=\"subhead\" {...props} />\n}\n\nexport function Kicker({ ...props }) {\n  return <Text variant=\"kicker\" {...props} />\n}\n\ninterface LinkProps extends BaseProps {\n  to?: string\n  href?: string\n}\n\nexport function Link({ to, href, ...props }: WithChildren<LinkProps>) {\n  const url = href || to || \"\"\n  if (isAbsoluteURL(url)) {\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a href={url} className={styles.link} {...props} />\n    )\n  }\n  return <GatsbyLink to={url} className={styles.link} {...props} />\n}\n\nexport function NavLink({ ...props }) {\n  return <Base as={Link} cx={[styles.navlink]} {...props} />\n}\n\nexport function NavButtonLink({ ...props }) {\n  return <Base as=\"button\" cx={[styles.navButtonlink]} {...props} />\n}\n\ninterface ButtonProps extends BaseProps {\n  variant?: styles.ButtonVariants\n  href?: string\n  to?: string\n}\n\nexport function Button({\n  variant = \"primary\",\n  ...props\n}: WithChildren<ButtonProps>) {\n  return <Base as={Link} cx={[styles.buttons[variant]]} {...props} />\n}\n\ninterface ButtonListProps extends BaseProps {\n  links: HomepageLink[]\n  variant?: styles.FlexVariants\n  reversed?: boolean\n}\n\nexport function ButtonList({\n  links = [],\n  reversed = false,\n  ...props\n}: ButtonListProps) {\n  const getVariant = (i): styles.ButtonVariants => {\n    if (reversed) {\n      return i === 0 ? \"reversed\" : \"linkReversed\"\n    }\n    return i === 0 ? \"primary\" : \"link\"\n  }\n  return (\n    <FlexList marginY={4} {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <Button href={link.href} variant={getVariant(i)}>\n              {link.text}\n            </Button>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function CTALink(props) {\n  return <Base as={Link} cx={[styles.ctaLink]} {...props} />\n}\n\ninterface LinkListProps extends BaseProps {\n  links: HomepageLink[]\n}\n\nexport function LinkList({ links = [], ...props }: LinkListProps) {\n  return (\n    <FlexList {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <CTALink href={link.href}>{link.text}</CTALink>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function Blockquote(props) {\n  return <Base as=\"blockquote\" cx={[styles.blockquote]} {...props} />\n}\n\nexport interface AvatarProps {\n  alt: string\n  image: ImageDataLike\n}\n\nexport function Avatar({ alt, image }: AvatarProps) {\n  return (\n    <GatsbyImage alt={alt} image={getImage(image)} className={styles.avatar} />\n  )\n}\n\ninterface LogoProps extends GatsbyImageProps {\n  size: styles.LogoSizes\n}\n\nexport function Logo({ alt, image, size = \"small\" }: LogoProps) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.logos[size]}\n    />\n  )\n}\n\ninterface IconProps extends GatsbyImageProps {\n  size?: styles.IconSizes\n}\n\nexport function Icon({ alt, image, size = \"medium\" }: IconProps) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.icons[size]}\n    />\n  )\n}\n\nexport function IconLink(props) {\n  return <NavLink cx={[styles.iconLink]} {...props} />\n}\n\nexport function InteractiveIcon(props) {\n  return <Base as=\"button\" cx={[styles.interactiveIcon]} {...props} />\n}\n\nexport function VisuallyHidden(props) {\n  return <Base as=\"span\" cx={[styles.visuallyHidden]} {...props} />\n}\n\nexport function BlockLink(props) {\n  return <Link className={styles.blockLink} {...props} />\n}\n"],"names":["avatar","backgrounds","primary","muted","blockquote","box","center","buttons","reversed","link","linkReversed","containers","normal","wide","narrow","tight","fullbleed","ctaLink","flex","flexGap","flexVariants","wrap","start","baseline","columnStart","column","end","stretch","spaceBetween","responsive","gutter","iconLink","icons","small","medium","large","interactiveIcon","list","logos","margin","auto","marginBottom","marginLeft","marginRight","marginTop","marginY","media","navButtonlink","navlink","order","padding","paddingY","radii","button","circle","section","text","body","lead","superHeading","heading","subhead","subheadSmall","kicker","caps","stat","statLabel","mega","bold","visuallyHidden","widths","full","half","quarter","third","twothirds","fitContent","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","hasNativeLazyLoadSupport","HTMLImageElement","prototype","node","Boolean","images","_node$images$fallback","fallback","src","gatsbyImageData","gatsbyImage","_node$childImageSharp","childImageSharp","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","LayoutWrapper","_ref","children","props","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","sources","sizes","type","key","fallbackImage","propTypes","PropTypes","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","validLayouts","GatsbyImageBrowser","ABSOLUTE_URL_REGEX","WINDOWS_PATH_REGEX","cx","args","Base","Component","_cx","Container","styles","Flex","variant","gap","alignItems","Box","background","radius","FlexList","Space","size","Nudge","Section","Text","SuperHeading","Heading","Subhead","Kicker","Link","to","href","url","isAbsoluteURL","GatsbyLink","NavLink","NavButtonLink","Button","ButtonList","links","getVariant","id","CTALink","LinkList","Blockquote","Avatar","getImage","Logo","Icon","IconLink","InteractiveIcon","VisuallyHidden"],"sourceRoot":""}